// Delay Animation Mixin - Requires time
@mixin delay-animation($delay){
  -webkit-animation-delay: $delay;
  -moz-animation-delay: $delay;
  -o-animation-delay: $delay;
  animation-delay: $delay;
}

// Animation Mixin - Requires Time
@mixin transition($transition) {
  -moz-transition:    all $transition cubic-bezier(.17,.67,.83,.67);;
  -o-transition:      all $transition cubic-bezier(.17,.67,.83,.67);;
  -webkit-transition: all $transition cubic-bezier(.17,.67,.83,.67);;
  transition:         all $transition cubic-bezier(.17,.67,.83,.67);;
}

// Gradient Mixin - Requires Color
@mixin gradient($color){
  background: $color; /* Old browsers */
  background: -moz-linear-gradient(left, $color 0%, darken($color, 10%) 100%); /* FF3.6-15 */
  background: -webkit-linear-gradient(left, $color 0%, darken($color, 10%) 100%); /* Chrome10-25,Safari5.1-6 */
  background: linear-gradient(to right, $color 0%, darken($color, 10%) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}
@mixin gradient-vertical($color){
  background: $color; /* Old browsers */
  background: -moz-linear-gradient(top, darken($color, 10%) 0%, $color 100%); /* FF3.6-15 */
  background: -webkit-linear-gradient(top, darken($color, 10%) 0%, $color 100%); /* Chrome10-25,Safari5.1-6 */
  background: linear-gradient(to top, darken($color, 10%) 0%, $color 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}


@mixin button($color){
  color: white;
  padding: 15px 70px;
  background: $color;
  border-radius: 30px;
  text-transform: uppercase;
  -webkit-box-shadow: inset 2px 2px 0 rgba(255, 255, 255, 0.05), 5px 3px 9px 0 rgba(0, 0, 0, 0.28);
  box-shadow: inset 2px 2px 0 rgba(255, 255, 255, 0.05), 5px 3px 9px 0 rgba(0, 0, 0, 0.28);
  @include transition(200ms);
  &:active, &.active, &:hover {
    outline: 0;
    background:darken($color, 5%);
    -webkit-box-shadow: inset 2px 2px 0 rgba(255, 255, 255, 0.2), 5px 3px 9px 0 rgba(0, 0, 0, 0.28);
    box-shadow: inset 2px 2px 0 rgba(255, 255, 255, 0.2), 5px 3px 9px 0 rgba(0, 0, 0, 0.28);
    color:white;
  }

}

// LONG SHADOW

@mixin long-shadow($type, $color, $length, $fadeout: true, $skew: false, $direction: right){
  $shadow: '';
  @if $skew == false or $type == text{
    @if $direction == right {
      @for $i from 0 to $length - 1 {
        $shadow: $shadow + $i + 'px ' + $i + 'px 0 ' + $color + ',';
      }
    }
    @if $direction == left {
      @for $i from 0 to $length - 1 {
        $shadow: $shadow + $i * -1 + 'px ' + $i + 'px 0 ' + $color + ',';
      }
    }
  }

  @if $fadeout == true{
    @for $i from 1 to $length - 1 {
      @if $type == text or $skew == false{
        @if $direction == right{
          $shadow: $shadow + $i + 'px ' + $i + 'px 0 ' +       rgba($color, 1 - $i / $length) + ',';
        }
        @if $direction == left{
          $shadow: $shadow + $i * -1 + 'px ' + $i + 'px 0 ' +       rgba($color, 1 - $i / $length) + ',';
        }
      }
      @if ($type == box) and $skew == true{
        @if $direction == right {
          $shadow: $shadow + $i + 'px ' + $i + 'px 0 ' + $i * .2 + 'px ' + rgba($color, 1 - $i / $length) + ',';
        }
        @if $direction == left {
          $shadow: $shadow + $i * -1 + 'px ' + $i + 'px 0 ' + $i * .2 + 'px ' + rgba($color, 1 - $i / $length) + ',';
        }
      }
    }
    $shadow: $shadow + $length + 'px ' + $length + 'px 0 ' + rgba($color, 0);
  }
  @if $fadeout == false{
    @if $skew == true and ( $type == box ){
      @for $i from 0 to $length - 1 {
        $shadow: $shadow + $i + 'px ' + $i + 'px 0 ' + $i * .1 + 'px ' + $color + ',';
      }
    }
    $shadow: $shadow + $length + 'px ' + $length + 'px 0 ' + rgba(0,0,0,0);
  }
  $shadow: unquote($shadow);
  @if $type == 'box' {box-shadow: $shadow;}
  @if $type == 'text' {text-shadow: $shadow;}
}